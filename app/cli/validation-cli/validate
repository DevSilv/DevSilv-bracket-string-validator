#!/bin/bash

source ./app/cli/print-usage

THIS_SCRIPT_NAME=$(basename "$0")
FIRST_ARG="$1"
SECOND_ARG="$2"

case "$FIRST_ARG" in
    "counter-method"|"c")
        node --experimental-modules "./app/logic/validation/validate.mjs" "counter" "$SECOND_ARG"
        ;;
    "recursion-method"|"r")
        node --experimental-modules "./app/logic/validation/validate.mjs" "recursion" "$SECOND_ARG"
        ;;
    "shortest-method"|"sh")
        node --experimental-modules "./app/logic/validation/validate.mjs" "shortest" "$SECOND_ARG"
        ;;
    "stack-method"|"st")
        node --experimental-modules "./app/logic/validation/validate.mjs" "stack" "$SECOND_ARG"
        ;;
    "stack-list-method"|"stl")
        node --experimental-modules "./app/logic/validation/validate.mjs" "stack-list" "$SECOND_ARG"
        ;;
    "")
        # It works because when there is provided only the bracket string,
        #   it becomes the first argument instead of the name of a method
        node --experimental-modules "./app/logic/validation/validate.mjs" "stack-list" "$FIRST_ARG"
        ;;
    *)
        # If the first argument is invalid,
        #   the other do not matter
        printf "$THIS_SCRIPT_NAME: $FIRST_ARG: subcommand uknown.\n"
        printUsage
        ;;
esac