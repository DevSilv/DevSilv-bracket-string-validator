#!/bin/bash

source ./app/cli/print-usage

THIS_SCRIPT_NAME=$(basename "$0")
FIRST_ARG="$1"
SECOND_ARG="$2"

if [[ "$#" > 2 ]] ; then
    printf "$THIS_SCRIPT_NAME: too many arguments provided.\n"
    printUsage
elif [[ "$#" == 2 || "$#" == 1 ]] ; then
    case "$FIRST_ARG" in
        "counter-method"|"c")
            if [[ "$#" == 2 ]] ; then
                node "./app/logic/validation/non-testable/validate.js" "counter" "$SECOND_ARG"
            else
                printf "$THIS_SCRIPT_NAME: no string to validate provided.\n"
                printUsage
            fi
            ;;
        "recursion-method"|"r")
            if [[ "$#" == 2 ]] ; then
                node "./app/logic/validation/non-testable/validate.js" "recursion" "$SECOND_ARG"
            else
                printf "$THIS_SCRIPT_NAME: no string to validate provided.\n"
                printUsage
            fi
            ;;
        "shortest-method"|"sh")
            if [[ "$#" == 2 ]] ; then
                node "./app/logic/validation/non-testable/validate.js" "shortest" "$SECOND_ARG"
            else
                printf "$THIS_SCRIPT_NAME: no string to validate provided.\n"
                printUsage
            fi
            ;;
        "stack-method"|"st")
            if [[ "$#" == 2 ]] ; then
                node "./app/logic/validation/non-testable/validate.js" "stack" "$SECOND_ARG"
            else
                printf "$THIS_SCRIPT_NAME: no string to validate provided.\n"
                printUsage
            fi
            ;;
        "stack-list-method"|"stl")
            if [[ "$#" == 2 ]] ; then
                node "./app/logic/validation/non-testable/validate.js" "stack-list" "$SECOND_ARG"
            else
                printf "$THIS_SCRIPT_NAME: no string to validate provided.\n"
                printUsage
            fi
            ;;
        "")
            printf "$THIS_SCRIPT_NAME: no particular subcommand specified.\n"
            printUsage
            ;;
        *)
            if [[ "$#" == 2 ]] ; then
                printf "$THIS_SCRIPT_NAME: $FIRST_ARG: subcommand uknown.\n"
                printUsage
            else
                # Assume it was passed only the bracket string, not method
                node "./app/logic/validation/non-testable/validate.js" "stack-list" "$FIRST_ARG"
            fi
            ;;
    esac  
else
    printf "$THIS_SCRIPT_NAME: no string to validate provided.\n"
    printUsage
fi
